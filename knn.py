# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kUXIvVKvoSCvr5u13i-HWAoEFeZuavi8
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import itertools
import matplotlib.pyplot as plt
from matplotlib.ticker import NullFormatter
import matplotlib.ticker as ticker
from sklearn import preprocessing
# %matplotlib inline

!wget -O teleCust1000t.csv https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/ML0101ENv3/labs/teleCust1000t.csv

df = pd.read_csv('teleCust1000t.csv')
df.head()

df.describe()

df['custcat'].value_counts()

df.hist(column='income',bins=100)

x = df[['region','tenure','age','marital','address','income','ed','employ','retire','gender','reside']]
x[0:5]
y=df[['custcat']]
y.head()


import sklearn; print(sklearn.__file__)

x = preprocessing.StandardScalar().fit(x).transform(x.astype(float))
x.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=4)
print('train_set: ',x_train.shape,y_train.shape)
print('test_Set: ', x_test.shape,y_test.shape)

from sklearn.neighbors import KNeighborsClassifier

k = 4
neigh = KNeighborsClassifier(n_neighbors = k).fit(x_train,y_train)
neigh

y_prd = neigh.predict(x_test)
y_prd

from sklearn import metrics
print("train set accuracy: ",metrics.accuracy_score(y_train,neigh.predict(x_train)))
print("test set accuracy: ",metrics.accuracy_score(y_test,neigh.predict(x_test)))

Ks = 10
mean_acc = np.zeros((Ks-1))
std_acc = np.zeros((Ks-1))
ConfustionMx = [];
for n in range(1,Ks):
    
    #Train Model and Predict  
    neigh = KNeighborsClassifier(n_neighbors = n).fit(x_train,y_train)
    yhat=neigh.predict(x_test)
    mean_acc[n-1] = metrics.accuracy_score(y_test, yhat)

    
    std_acc[n-1]=np.std(yhat==y_test)/np.sqrt(yhat.shape[0])

mean_acc


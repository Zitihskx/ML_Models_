# -*- coding: utf-8 -*-
"""Linear_regres.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W5CgwIU4iew9hXkH188sHWYdYPMxQAHN
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import pylab as pl
# %matplotlib inline

#importing data

!wget -O FuelConsumption.csv https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/ML0101ENv3/labs/FuelConsumptionCo2.csv

df = pd.read_csv('FuelConsumption.csv')
df.head()

df.describe()

cdf = df[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB','CO2EMISSIONS']]
cdf.head()
cdf.hist()
cdf.plot()

plt.scatter(cdf.FUELCONSUMPTION_COMB,cdf.CO2EMISSIONS,color = 'blue')
plt.xlabel("FUELCONSUMPTION_COMB")
plt.ylabel("CO2EMISSIONS")

plt.show()

plt.scatter(cdf.ENGINESIZE,cdf.CO2EMISSIONS,color='green')
plt.xlabel("ENGINESIZE")
plt.ylabel("CO2EMISSION")
plt.show()

plt.scatter(cdf.CYLINDERS,cdf.CO2EMISSIONS,color='red')
plt.xlabel("CYLINDERS")
plt.ylabel("CO2EMISSION")
plt.show()

msk = np.random.rand(len(df))<0.8
train = cdf[msk]
test = cdf[~msk]

test.describe()
train.describe()

plt.scatter(train.ENGINESIZE,train.CO2EMISSIONS,color='green')
plt.xlabel('Enginesize')
plt.ylabel('CO2Emisison')
plt.show()

from sklearn import linear_model
reg = linear_model.LinearRegression()
train_x = np.asanyarray(train[['ENGINESIZE']])
train_y = np.asanyarray(train[['CO2EMISSIONS']])
reg.fit(train_x,train_y)
print("Cofficient: ",reg.coef_)
print("Intercept: ",reg.intercept_)

plt.scatter(train.ENGINESIZE,train.CO2EMISSIONS,color='blue')
plt.plot(train_x,reg.coef_[0][0]*train_x+reg.intercept_,'-r')
plt.xlabel('ENginesize')
plt.ylabel('Emission')
plt.show()

from sklearn.metrics import r2_score
test_x=np.asanyarray(test[['ENGINESIZE']])
test_y=np.asanyarray(test[['CO2EMISSIONS']])
test_y_lin = reg.predict(test_x)

print('Mean absolute erro : %0.2f'% np.mean(np.absolute(test_y_lin-test_y)))
print('Root mean square: %0.2f'% np.mean((test_y_lin-test_y)**2))
print('R2-score: %0.2f'% r2_score(test_y_lin,test_y))

from sklearn import linear_model
reg = linear_model.LinearRegression()
train_xx = np.asanyarray(train[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB']])
train_yy = np.asanyarray(train[['CO2EMISSIONS']])
reg.fit(train_xx,train_yy)
print("Coefficients: ",reg.coef_)
print("Intercept: ",reg.intercept_)

test_res = reg.predict(test[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB']])
x = np.asanyarray(test[['ENGINESIZE','CYLINDERS','FUELCONSUMPTION_COMB']])
y = np.asanyarray(test[['CO2EMISSIONS']])
print("Mean square error: %0.2f"% np.mean((test_res-y)**2))
print("VAriance score:%0.2f"% reg.score(x,y))